type Query {
  # プロジェクトの読み取りクエリ
  project(id: ID!): Project
  projects: [Project]
  developmentStage(id: ID!): DevelopmentStage
  developmentStages: [DevelopmentStage]
  task(id: ID!): Task
  tasks: [Task]
  document(id: ID!): Document
  documents: [Document]
  discussion(id: ID!): Discussion
  discussions: [Discussion]
}

type Mutation {
  # プロジェクトに関するミューテーション
  createProject(name: String!, status: ProjectStatus!): Project
  updateProject(id: ID!, name: String, status: ProjectStatus): Project
  deleteProject(id: ID!): ID

  # 開発ステージに関するミューテーション
  createDevelopmentStage(
    type: DevelopmentStageType!
    name: String!
    status: ProjectStatus!
  ): DevelopmentStage
  updateDevelopmentStage(
    id: ID!
    type: DevelopmentStageType
    name: String
    status: ProjectStatus
  ): DevelopmentStage
  deleteDevelopmentStage(id: ID!): ID

  # タスクに関するミューテーション
  createTask(name: String!, status: ProjectStatus!): Task
  updateTask(id: ID!, name: String, status: ProjectStatus): Task
  deleteTask(id: ID!): ID

  # ドキュメントに関するミューテーション
  createDocument(
    type: DocumentType!
    subType: DocumentSubType!
    title: String!
    content: String!
    status: ProjectStatus!
  ): Document
  updateDocument(
    id: ID!
    type: DocumentType
    subType: DocumentSubType
    title: String
    content: String
    status: ProjectStatus
  ): Document
  deleteDocument(id: ID!): ID

  # ディスカッションに関するミューテーション
  createDiscussion(topic: String!, participants: [String]!): Discussion
  updateDiscussion(id: ID!, topic: String, participants: [String]): Discussion
  deleteDiscussion(id: ID!): ID
}
